% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/functions.R
\name{manipulateSqlPull}
\alias{manipulateSqlPull}
\title{This function performs the manipulation of the sql extract data; should be generic for any of the feature types}
\usage{
manipulateSqlPull(tmp_fv, flags, timeDiff)
}
\arguments{
\item{tmp_fv}{Pull from sql query.  Should have a column for date and concept_id}

\item{flags}{Flags set in settings - specifies which normalization is needed}

\item{timeDiff}{Value to use for normalization}
}
\value{
An object containing the re-formatted patient data: ptID x (num concept IDs) - filled with counts, deduplicated by visit
}
\description{
This function performs the manipulation of the sql extract data; should be generic for any of the feature types
}
\details{
This is just a helper function that reduces the repeats of code for the manipulation of the sql extract data, so that it is put in the desired format for compiling all patient features together.  This function: gets the counts of codes on a given visit (so multiple codes/terms/drugs/etc are not all counted); normalizes based on the normalization setting; returns a data frame with counts of codes
}
\examples{
\dontrun{

 test1 <- manipulateSqlPull(tmp_fv, flags, timeDiff)

}
}

